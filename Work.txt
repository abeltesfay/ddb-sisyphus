January 11
[o] Do we need to specify pk/sk fields for table?
[o] Do we need to get into table details?
[x] Add example query select
[x] Rename ux to ui finally
[x] Get pk key inputs
[x] Get sk key inputs
[x] Create necessary pk inputs in table
  [x] Create list of inputs
  [x] Create header element(s)
  [x] Create input element(s)
  [x] Update pk readonly input when query inputs change
[x] Filter documents based on pk query inputs
[x] Filter only if a pk field has text in it
[ ] Add sk fields
  [x] Add inputs
  [x] Populate sk filter readonly input
  [ ] Filter on sk
[ ] Exact match vs fuzzy match checkbox
[ ] Support non-composite sk on examples editor
  [ ] Logic read bar in input
  [ ] Test

January 10
[x] Delete index
[x] Update index (not a save, just update)
[x] Selected index dropdowns
[x] Update query pk
[x] Update query pk to contain derived value
[x] Update query sk from begins with dropdown
[x] Update composite key with static value
  [x] Add a filter on the fields section
  [x] Fix bugs in updating queries
  [x] Toggle save if there is a savable state
  [x] Prefix static value composite keys with an indicator
[x] Query editor pk field replace comma with delim
[x] Query editor index add please select option
[x] Drop "keys" on fields unless type is "C"
[x] Add in car's queries
  [x] Prevent add from adding empty string
  [x] Automatically uppercase static values?
  [-] Worked pretty well.
    - Had to re-create pk-sk fields for the Review facet, but
      wasn't a ton of work.
    - Re-creating the pk-sk fields for the Review facet allowed
      me to see exactly what the format of that field will be..
      this will be invaluable for future modifications to pk-sk
      in that it can show cascading changes we need to make
[x] Case-insensitive field filtering
[?] How do we want to handle broken relationships?
  [o] You can remove a field on a facet, but it won't cascade
      failures through to a composite field type -> index -> query
    - What should it do here? Alert the user a field doesn't exist
      on a query makes the most sense to me.
  [o] You can change the order of a composite key
    - We should alert the user of any queries that have pk/sk
      that are no longer valid/findable in our list 
[x] Query editor pk/sk should handle non composite keys
[x] Query editor pk/sk should handle no/empty sort key
[x] Update dropdown constants to be an enum
[x] Flip enabled buttons depending on current editor
[x] Example document section
  - https://developer.mozilla.org/en-US/docs/Web/CSS/border-collapse
[x] Add example
[x] Show examples
  [x] Delete all rows
  [x] Add a row for each example
  [x] Add a single field value in a td to each row
[x] Delete example
  [x] Select a row
  [x] Prompt
  [x] Remove
[x] Add example - add facet name to object so we know what it is
[-] Edit example
[x] Migrate pk/sk to the front of the display
[x] Migrate pk/sk to the front of the inputs
[x] Validate pk and sk are not empty string
[x] Validate keys are not duplicated
[-] Add example has "CALCULATED" label for composite type fields
  - https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly
  - Grayed out and marking other composite key fields instead
[x] Update composite key fields on composite key part change
[x] Checkbox to hide non-composite key inputs

January 9
[x] Add query (contin)
[x] Show indexes in selectable dropdown
  - https://stackoverflow.com/questions/5381621/jquery-function-to-get-all-unique-elements-from-an-array
[x] Add index

January 8
[x] Error handling loading app state
[x] Change "saved field" to be fixed/static at top right of page
[o] Show detailed list of changes
[x] Prevent losing unsaved changes
  window.onbeforeunload = function() { return "okay"; }
  - https://stackoverflow.com/questions/48523454/onbeforeunload-doesnt-work-until-mouse-is-clicked-once-in-the-body
[x] Table Structure / Queries tabs selector
[x] Code re-org
[x] Add query
  - Get App by Com #5a
  - Query should contain:
    - short description, e.g.: getApplicationDetailsByApplicantId
    - long description, e.g.: Get all application documents purely by pk and part of sk using some index
      - I think we may be able to automate this once we have the below information
    - index you're using (which defines pk+sk) <dropdown>
    - field(s)/static value you're passing in to pk
    - field(s)/static value you're passing in to sk
    ^ this is where it gets complicated. need standard way of doing this so we can
      automate all the checks and etc

January 7
[x] Show all fields when no facet selected
[x] Types on fields
  [x] Show dropdown to right of each field
  [8] Save dropdown value to field
[x] Load app_state from input
  [x] Button to prompt
  [x] Code
[x] Types on fields
  [x] Update type in state
  [x] Create state checker for unsaved flag
  [x] Save dropdown value to field
[x] Validate previous functionality for changes
[x] Auto-alphabetize fields
[-] Add fields easily without clicking "Add" button
[-] Add fields from other facets
[-] Would be nice to..
  [o] Easily save json to a file
  [o] Export json to something that NoSQL Workbench could import
  [o] Create example documents
  [o] Specify formats of fields
    - What does this mean?
      Oh.. basically link one field to be a concatenation of 2 or more other fields by a delimiter
      Actually then, this means specify composite key strings used by queries
  [o] Show us impacted queries when changing a composite key field
  [o] Create access patterns from composite keys
    - What does this look like?
      1. Create name for new query
      1. Click the fields in the facet that this relies on for querying
      1. Click the GSI this relies on? May be able to get that automatically from field
      1. Save the name + field combos
    - How is this stored in JSON?
    queries: [{ name: "Get Application by pk SK", fields: ["pk", "sk"], example: { pk: "", sk: "begins_with('lol#')" } }]
[x] Create concept of composite keys
  [x] Add "C" as a type dropdown for composite key
  [x] Hardcode our composite key delimiter to be #
    - https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link
  [x] Show composite key panel on click
    - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex
    - https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select
  [x] Show other fields in dropdown
  [x] Add key
  [x] Delete key
  [x] Save format
  [x] Validate no duplicates
[x] Composite Keys - Up/down button ordering
  - https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex
[x] Load current data

2023 January 6
[x] Install express
  npm i express
[x] Start a simple webserver
  - http://expressjs.com/en/starter/static-files.html
[x] Build basic layout
  - https://stackoverflow.com/questions/8711888/auto-refresh-code-in-html-using-meta-tags
  - ctrl+shift+z auto activates and refreshes page
[x] Add Facet
[x] Save to storage
[x] Load from storage
[x] Nuke storage
[x] Delete Facet
[x] Add field
[x] Show facet fields
[x] Edit Facet Name
  - https://stackoverflow.com/questions/31075893/how-to-fix-favicon-ico-error-failed-to-load-resource-neterr-empty-response
[x] Edit Facet Fields
  - https://tpiros.dev/blog/contains-vs-includes/
[x] Delete Facet Button
[x] Delete Field Button
